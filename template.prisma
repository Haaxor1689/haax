generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = "file:DATASOURCE_URL_TEMPLATE"
}

model Continent {
  id   Int    @id
  name String

  AreaPOI           AreaPOI[]
  AreaTable         AreaTable[]
  WorldMapArea      WorldMapArea[]
  WorldMapContinent WorldMapContinent[]
}

model AreaPOI {
  id               Int       @id
  importance       Int
  icon             Int
  factionId        Int
  x                Float
  y                Float
  z                Float
  continentId      Int
  continent        Continent @relation(fields: [continentId], references: [id])
  flags            Int
  areaId           Int
  area             AreaTable @relation(fields: [areaId], references: [id])
  name_enUS        String
  name_enGB        String
  name_koKR        String
  name_frFR        String
  name_deDE        String
  name_enCN        String
  name_zhCN        String
  name_enTW        String
  nameMask         Int
  description_enUS String
  description_enGB String
  description_koKR String
  description_frFR String
  description_deDE String
  description_enCN String
  description_zhCN String
  description_enTW String
  descriptionMask  Int
  worldStateId     Int
}

model AreaTable {
  id                          Int       @id
  continentId                 Int
  continent                   Continent @relation(fields: [continentId], references: [id])
  parentAreaId                Int
  parentArea                  AreaTable @relation("ParentRelation", fields: [parentAreaId], references: [id])
  areaBit                     Int
  flags                       Int
  soundPreferenceId           Int
  underwaterSoundPreferenceId Int
  soundAmbienceId             Int
  zoneMusicId                 Int
  zoneIntroMusicId            Int
  explorationLevel            Int
  name_enUS                   String
  name_enGB                   String
  name_koKR                   String
  name_frFR                   String
  name_deDE                   String
  name_enCN                   String
  name_zhCN                   String
  name_enTW                   String
  nameMask                    Int
  factionGroupMask            Int
  liquidTypeId                Int
  minElevation                Float
  ambientMultiplier           Float
  lightId                     Int

  ChildAreas   AreaTable[]    @relation("ParentRelation")
  AreaPOI      AreaPOI[]
  WMOAreaTable WMOAreaTable[]
  WorldMapArea WorldMapArea[]
}

model WMOAreaTable {
  id                        Int       @id
  wmoId                     Int
  nameSetId                 Int
  wmoGroupId                Int
  soundProviderId           Int
  underwaterSoundProviderId Int
  ambienceId                Int
  zoneMusicId               Int
  introSoundId              Int
  flags                     Int
  areaTableId               Int
  areaTable                 AreaTable @relation(fields: [areaTableId], references: [id])
  name_enUS                 String
  name_enGB                 String
  name_koKR                 String
  name_frFR                 String
  name_deDE                 String
  name_enCN                 String
  name_zhCN                 String
  name_enTW                 String
  nameMask                  Int
}

model WorldMapArea {
  id          Int       @id @default(autoincrement())
  continentId Int
  continent   Continent @relation(fields: [continentId], references: [id])
  areaId      Int
  areaTable   AreaTable @relation(fields: [areaId], references: [id])
  name        String
  locLeft     Float
  locRight    Float
  locTop      Float
  locBottom   Float
}

model WorldMapContinent {
  id          Int       @id
  continentId Int
  continent   Continent @relation(fields: [continentId], references: [id])
  left        Int
  right       Int
  top         Int
  bottom      Int
  offsetX     Float
  offsetY     Float
  scale       Float
  taxiMinX    Int
  taxiMinY    Int
  taxiMaxX    Int
  taxiMaxY    Int
}
